<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.kuper.tz.system.dao.UserElementDao">

    <resultMap id="userElementMap" type="net.kuper.tz.system.entity.UserElementEntity">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="elementId" column="element_id"/>
        <result property="rightType" column="right_type"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="deleteTime" column="delete_time"/>
    </resultMap>

    <sql id="columns">
        `t`.`id` ,
        `t`.`user_id` ,
        `t`.`element_id` ,
        `t`.`right_type` ,
        `t`.`update_time` ,
        `t`.`create_time` ,
        `t`.`delete_time`
    </sql>

    <sql id="select_normal">
        select
        <include refid="columns"/>
        from  `sys_user_element` as `t`
    </sql>

    <sql id="dft_where">
        <if test="userId != null and userId.trim() != ''">
            AND `t`.`user_id` = #{userId}
        </if>
        <if test="elementId != null and elementId.trim() != ''">
            AND `t`.`element_id` = #{elementId}
        </if>
        <if test="rightType != null">
            AND `t`.`right_type` = #{rightType}
        </if>
    </sql>

    <sql id="dft_order">
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                <choose>
                    <when test="'userId' == sidx ">
                        order by `t`.`user_id`
                    </when>
                    <when test="'elementId' == sidx ">
                        order by `t`.`element_id`
                    </when>
                    <when test="'rightType' == sidx ">
                        order by `t`.`right_type`
                    </when>
                    <otherwise>
                        order by `t`.`create_time`
                    </otherwise>
                </choose>
            </when>
            <otherwise>
                order by `t`.`create_time`
            </otherwise>
        </choose>
        <choose>
            <when test="stype == 'ASC'">
                ASC
            </when>
            <otherwise>
                DESC
            </otherwise>
        </choose>
    </sql>


    <select id="queryObject" resultMap="userElementMap">
        <include refid="select_normal"/>
        where `t`.`id` = #{value}
    </select>

    <select id="queryList" parameterType="map" resultMap="userElementMap">
        <include refid="select_normal"/>
        WHERE t.delete_time is null
        <include refid="dft_where"/>
        <include refid="dft_order"/>
    </select>

    <select id="queryEnableElementIdByUser" resultType="java.lang.String">
         select t.element_id,
          t.right_type
         from sys_user_element t
         left join sys_element se on se.id = t.element_id
         where t.delete_time is null
           and t.user_id = #{userId}
           and t.right_type = 1
           and se.delete_time is null
         union all
         select t.element_id, t.right_type
         from sys_role_element t
         left join sys_element se on se.id = t.element_id
         where t.delete_time is null
           and se.delete_time is null
           and t.right_type = 1
           and t.role_id in (
             select t.role_id
             from sys_user_role sur
             left join sys_role sr on sr.id = sur.role_id
             where sur.delete_time is null
             and sr.delete_time is null
             and sur.user_id = #{userId}
           )
           and t.element_id not in (
             select t.element_id
             from sys_user_element sue
             left join sys_element se on se.id = sue.element_id
             where sue.delete_time is null
             and se.delete_time is null
             and sue.user_id = #{userId}
           )
    </select>

    <select id="queryListBySuperRole" resultMap="userElementMap">
        select se.id                                as element_id,
               se.name                              as element_name,
               se.category_id                       as category_id,
               1 as editable,
               IF(cse.element_id is not null, 1, 0) as checked,
               IF(cse.role_id is not null, 1, 0)    as roleChecked,
               cse.right_type                       as right_type
        from sys_element se
                 left join (
            select *
            from (
                     select sue.element_id,
                            sue.right_type,
                            null as role_id
                     from sys_user_element sue
                     left join sys_element se on se.id = sue.element_id
                     where sue.delete_time is null
                       and se.delete_time is null
                       and sue.user_id = #{userId}
                     union all
                     select sre.element_id,
                            sre.right_type,
                            sre.role_id
                     from sys_role_element sre
                     left join sys_element se on se.id = sre.element_id
                     where sre.delete_time is null
                       and se.delete_time is null
                       and sre.role_id in (
                         select t.role_id
                         from sys_user_role t
                         left join  sys_role sr on sr.id = t.role_id
                         where t.delete_time is null
                         and sr.delete_time is null
                         and t.user_id = #{userId}
                     )
                       and sre.element_id not in (
                         select t.element_id
                         from sys_user_element t
                         left join sys_element se on se.id = t.element_id
                         where t.delete_time is null
                         and se.delete_time is null
                         and t.user_id = #{userId}
                     )
                 ) t
            group by t.element_id
        ) cse on cse.element_id = se.id
        where se.delete_time is null
    </select>
    <select id="queryListByUser" resultMap="userElementMap">
        select se.id                                as dept_id,
               se.name                              as dept_name,
               se.category_id                       as category_id,
               IF(ose.element_id is not null, 1, 0) as editable,
               IF(cse.element_id is not null, 1, 0) as checked,
               IF(cse.role_id is not null, 1, 0)    as roleChecked,
               cse.right_type                       as right_type
        from sys_element se
                 left join (
            select *
            from (
                     select *
                     from (
                              select sue.element_id,
                                     sue.right_type,
                                     null as role_id
                              from sys_user_element sue
                              left sys_element se on se.id = sue.element_id
                              where sue.delete_time is null
                                and se.delete_time is null
                                and sue.user_id = #{curUserId}
                              union all
                              select sre.element_id,
                                     sre.right_type,
                                     sre.role_id
                              from sys_role_element sre
                              left join sys_element se on se.id = sre.element_id
                              where sre.delete_time is null
                                and se.delete_time is null
                                and sre.role_id in (
                                  select t.role_id
                                  from sys_user_role t
                                  left join sys_role sr on sr.id = t.role_id
                                  where t.delete_time is null
                                  and sr.delete_time is null
                                  and t.user_id = #{curUserId}
                              )
                                and sre.element_id not in (
                                  select t.element_id
                                  from sys_user_element t
                                  left join sys_elemennt se on se.id = t.element_od
                                  where t.delete_time is null
                                  and se.delete_time is null
                                  and t.user_id = #{curUserId}
                              )
                          ) t
                     group by t.element_id
                 ) t
            where t.right_type = 1
        ) ose on ose.element_id = se.id
                 left join (
            select *
            from (
                     select sue.element_id,
                            sue.right_type,
                            null as role_id
                     from sys_user_element sue
                     left join sys_element se on se.id = sue.element_id
                     where sue.delete_time is null
                       and se.delete_time is null
                       and sue.user_id = #{userId}
                     union all
                     select sre.element_id,
                            sre.right_type,
                            sre.role_id
                     from sys_role_element sre
                     left join sys_element se on se.id = sre.element_id
                     where sre.delete_time is null
                       and se.delete_time is null
                       and sre.role_id in (
                         select t.user_id
                         from sys_user_role t
                         left join sys_role sr on sr.id = t.role_id
                         where t.delete_time is null
                           and sr.delete_time is null
                           and t.user_id = #{userId}
                     )
                       and sre.element_id not in (
                         select t.element_id
                         from sys_user_element t
                         left join sys_element se on se.id = t.element_id
                         where t.delete_time is null
                           and se.delete_time is null
                           and t.user_id = #{userId}
                     )
                 ) t
            group by t.element_id
        ) cse on cse.element_id = se.id
        where se.delete_time is null
    </select>

    <insert id="save" parameterType="net.kuper.tz.system.entity.UserElementUpdateEntity" >
        <selectKey keyProperty="id" resultType="String" order="BEFORE">
            select REPLACE(UUID(),'-','') from dual
        </selectKey>
        insert into `sys_user_element`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                `id` ,
            </if>
            <if test="userId != null">
                `user_id` ,
            </if>
            <if test="elementId != null">
                `element_id` ,
            </if>
            <if test="rightType != null">
                `right_type` ,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id} ,
            </if>
            <if test="userId != null">
                #{userId} ,
            </if>
            <if test="elementId != null">
                #{elementId} ,
            </if>
            <if test="rightType != null">
                #{rightType} ,
            </if>
        </trim>
    </insert>

    <insert id="saveBatch" parameterType="java.util.List">
        insert into `sys_user_element` (`id` ,`user_id` , `element_id` , `right_type`)
        values
        <foreach collection="list" item="item" separator="," index="key">
            (UUID() , #{item.userId} ,#{item.elementId} ,#{item.rightType})
        </foreach>
    </insert>

    <update id="update" parameterType="net.kuper.tz.system.entity.UserElementUpdateEntity">
        update `sys_user_element`
        <set>
            <if test="userId != null">
                `user_id` = #{userId} ,
            </if>
            <if test="elementId != null">
                `element_id` = #{elementId} ,
            </if>
            <if test="rightType != null">
                `right_type` = #{rightType} ,
            </if>
            `update_time` = now() ,
        </set>
        where `id` = #{id}
    </update>

    <update id="delete">
        update `sys_user_element` set delete_time = now(), update_time = now() where `id` = #{value}
    </update>

    <update id="deleteByUser">
        update `sys_user_element` set delete_time = now(), update_time = now() where `user_id` = #{value}
    </update>

    <update id="deleteBatch">
        update `sys_user_element` set delete_time = now(), update_time = now() where `id` in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>


</mapper>